services:
  db:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=disclone_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: React
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/disclone/frontend
      - /disclone/frontend/node_modules
    depends_on:
      - gunicorn
      - daphne

  gunicorn:
    build:
      context: ./backend
      dockerfile: Dockerfile.gunicorn
    container_name: django_gunicorn
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=disclone_db
      - DEBUG=True
    ports:
      - '8001:8001'
    volumes:
      - ./backend:/disclone/backend
      - media_volume:/disclone/backend/media # Include the media volume here
    depends_on:
      - db
      - redis
    command: >
      bash -c " python manage.py makemigrations && python manage.py migrate && gunicorn disclone_proj.wsgi:application --bind 0.0.0.0:8001 --workers 4 "

  daphne:
    build:
      context: ./backend
      dockerfile: Dockerfile.daphne
    container_name: django_daphne
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=disclone_db
      - DEBUG=True
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/disclone/backend
    depends_on:
      - db
      - redis
    command: >
      bash -c " python manage.py makemigrations && python manage.py migrate && daphne -b 0.0.0.0 -p 8000 disclone_proj.asgi:application "

  redis:
    image: redis:latest
    ports:
      - '6379:6379'

volumes:
  postgres_data:
  media_volume: # Define the media_volume here
